@model PastebookEntityFramework.PB_USER

@{
    ViewBag.Title = "Pastebook";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    <div class="col-md-10 col-md-offset-1 well wllRegister">
        <h1>Register</h1>
        <div class="col-md-5 frmRegister">
            <div class="form-group">
                @Html.LabelFor(model => model.USER_NAME, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtUsername", placeholder = "Username" } })
                    @Html.ValidationMessageFor(model => model.USER_NAME, "", new { @class = "text-danger" })
                    <span class="text-danger" id="spnUsername" hidden>Username is already taken.</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PASSWORD, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control", type = "password", id = "txtPassword", placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
                    <span class="text-danger" id="spnConfirmPassword" hidden>Passwords do not match.</span>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Confirm Password", new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                   @Html.TextBox("ConfirmPassword", "", new { @class = "form-control", type = "password", id = "txtConfirmPassword", placeholder = "Confirm Password" })
                    @Html.ValidationMessage("ConfirmPassword", new { @class = "text-danger" })
                    <span class="text-danger" id="spnConfirmPassword" hidden>Passwords do not match.</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EMAIL_ADDRESS, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control", type = "email", id = "txtEmailAddress", placeholder = "someone@example.com" } })
                    @Html.ValidationMessageFor(model => model.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                    <span class="text-danger" id="spnEmailAddress" hidden>Email is already taken.</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.GENDER, "m") Male
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.GENDER, "f") Female
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.GENDER, "u", new { @checked = "checked" }) Unspecified
                    </label>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                    @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                    @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BIRTHDAY, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", placeholder = "mm/dd/yyyy" } })
                    @Html.ValidationMessageFor(model => model.BIRTHDAY, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.COUNTRY_ID,
                                  new SelectList(ViewBag.Countries, "ID", "COUNTRY"),
                                  "--Select Country--",
                                  new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.COUNTRY_ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MOBILE_NO, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MOBILE_NO, new { htmlAttributes = new { @class = "form-control", placeholder = "09123456789" } })
                    @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-4 control-label">
                    @Html.ActionLink("Cancel", "LogIn", "Account", new { @class = "btn btn-default" })
                    <button type="submit" class="btn btn-primary" id="btnRegister">Sign Up</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var ConfirmPasswordUrl = '@Url.Action("ConfirmPassword", "Account")'
        var CheckEmailUrl = '@Url.Action("CheckEmail", "Account")'
        var CheckUsernameUrl = '@Url.Action("CheckUsername", "Account")'
    </script>
}
