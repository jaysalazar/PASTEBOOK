@model PastebookWebApplication.Models.RegisterViewModel

@{
    ViewBag.Title = "Register | Pastebook";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    <div class="col-md-10 col-md-offset-1 well wllRegister">
        <h1>Register</h1>
        <div class="form-group required divRequired">
            <span class="control-label">required field</span>
        </div>
        <div class="col-md-5 frmRegister">
            <div class="form-group required">
                @Html.LabelFor(model => model.User.USER_NAME, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.USER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtUsernameRegister", placeholder = "Username" } })
                    @Html.ValidationMessageFor(model => model.User.USER_NAME, "", new { @class = "text-danger" })
                    <span class="text-danger txtError" id="spnUsernameRegister">Username is already taken</span>
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.User.PASSWORD, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.PASSWORD, new { htmlAttributes = new { @class = "form-control", type = "password", id = "txtPasswordRegister", placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.User.PASSWORD, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password", id = "txtConfirmPasswordRegister", placeholder = "Confirm Password" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    <span class="text-danger txtError" id="spnConfirmPasswordRegister">Passwords do not match</span>
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.User.EMAIL_ADDRESS, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control", type = "email", id = "txtEmailRegister", placeholder = "someone@example.com" } })
                    @Html.ValidationMessageFor(model => model.User.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                    <span class="text-danger txtError" id="spnEmailRegister">Email is already taken</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.User.GENDER, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.User.GENDER, "m") Male
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.User.GENDER, "f") Female
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.User.GENDER, "u", new { @checked = "checked" }) Unspecified
                    </label>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group required">
                @Html.LabelFor(model => model.User.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.FIRST_NAME, new { htmlAttributes = new { @class = "form-control name", placeholder = "First Name" } })
                    @Html.ValidationMessageFor(model => model.User.FIRST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.User.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.LAST_NAME, new { htmlAttributes = new { @class = "form-control name", placeholder = "Last Name" } })
                    @Html.ValidationMessageFor(model => model.User.LAST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.User.BIRTHDAY, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", id = "date", placeholder = "dd/mm/yyyy" } })
                    @Html.ValidationMessageFor(model => model.User.BIRTHDAY, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.User.COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.User.COUNTRY_ID, new SelectList(Model.Countries, "ID", "COUNTRY"),
                                  "--Select Country--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.User.COUNTRY_ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.User.MOBILE_NO, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.MOBILE_NO, new { htmlAttributes = new { @class = "form-control", placeholder = "09991234567" } })
                    @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-4 control-label">
                    @Html.ActionLink("Cancel", "LogIn", "Account", new { @class = "btn btn-default" })
                    <button type="submit" class="btn btn-primary" id="btnRegister">Sign Up</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var CheckUsernameUrl = '@Url.Action("CheckUsername", "Account")'
        var CheckEmailUrl = '@Url.Action("CheckEmail", "Account")'
    </script>
    <script src="~/Scripts/pastebook/register.js"></script>
}
