@model PastebookWebApplication.Models.PastebookModel

@{
    ViewBag.Title = "Pastebook";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    <div class="form-horizontal">
        <h4>Sign Up</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.User.USER_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.USER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtUsername" } })
                @Html.ValidationMessageFor(model => model.User.USER_NAME, "", new { @class = "text-danger" })
                <span class="text-danger" id="spnUsername" hidden>Username is already taken.</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.PASSWORD, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.User.PASSWORD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.FIRST_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.LAST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.LAST_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.User.GENDER, new SelectList(new List<object>()
                {
                    new { value = 'm', text = "Male"},
                    new { value = 'f', text = "Female"},
                    new { value = 'u', text = "Unspecified"},
                }, "value", "text", 'u'), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User.GENDER, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.EMAIL_ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control", type = "email", id = "txtEmailAddress" } })
                @Html.ValidationMessageFor(model => model.User.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                <span class="text-danger" id="spnEmailAddress" hidden>Email Address is already taken.</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.BIRTHDAY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.BIRTHDAY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.BIRTHDAY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.User.COUNTRY_ID,
                                  new SelectList(ViewBag.Countries, "CountryId", "Country"),
                                  "--Select Country--",
                                  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User.COUNTRY_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.MOBILE_NO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.MOBILE_NO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" id="btnRegister" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var CheckEmailUrl = '@Url.Action("CheckEmail", "Account")';
        var CheckUsernameUrl = '@Url.Action("CheckUsername", "Account")';
    </script>
}
